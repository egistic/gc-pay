"""init

Revision ID: 5bb6782e647b
Revises: 0001_init
Create Date: 2025-09-07 11:42:54.760918

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5bb6782e647b'
down_revision = '0001_init'
branch_labels = None
depends_on = None


def upgrade() -> None:
# ### commands auto generated by Alembic - please adjust! ###
    op.create_table('counterparties',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('tax_id', sa.String(length=64), nullable=True),
    sa.Column('category', sa.String(length=128), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('currencies',
    sa.Column('code', sa.String(length=3), nullable=False),
    sa.Column('scale', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('code')
    )
    op.create_table('departments',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('code', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('expense_articles',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('code', sa.String(length=64), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=1000), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('roles',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('code', sa.String(length=64), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('users',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('phone', sa.String(length=50), nullable=True),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('vat_rates',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('rate', sa.Numeric(precision=6, scale=3), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('article_required_docs',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('article_id', sa.Uuid(), nullable=False),
    sa.Column('doc_type', sa.String(length=64), nullable=False),
    sa.Column('is_mandatory', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['article_id'], ['expense_articles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payment_requests',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('number', sa.String(length=64), nullable=False),
    sa.Column('created_by_user_id', sa.Uuid(), nullable=False),
    sa.Column('counterparty_id', sa.Uuid(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('status', sa.String(length=32), server_default=sa.text("'DRAFT'"), nullable=False),
    sa.Column('currency_code', sa.String(length=3), nullable=False),
    sa.Column('amount_total', sa.Numeric(precision=18, scale=2), nullable=False),
    sa.Column('vat_total', sa.Numeric(precision=18, scale=2), nullable=False),
    sa.Column('due_date', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['counterparty_id'], ['counterparties.id'], ),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['currency_code'], ['currencies.code'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('number')
    )
    op.create_table('positions',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('department_id', sa.Uuid(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=1000), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_roles',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('role_id', sa.Uuid(), nullable=False),
    sa.Column('valid_from', sa.Date(), nullable=False),
    sa.Column('valid_to', sa.Date(), nullable=True),
    sa.Column('is_primary', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('delegations',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('from_user_id', sa.Uuid(), nullable=False),
    sa.Column('to_user_id', sa.Uuid(), nullable=False),
    sa.Column('role_id', sa.Uuid(), nullable=True),
    sa.Column('position_id', sa.Uuid(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('reason', sa.String(length=1000), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.ForeignKeyConstraint(['from_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['position_id'], ['positions.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.ForeignKeyConstraint(['to_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payment_request_lines',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('request_id', sa.Uuid(), nullable=False),
    sa.Column('article_id', sa.Uuid(), nullable=False),
    sa.Column('executor_position_id', sa.Uuid(), nullable=False),
    sa.Column('registrar_position_id', sa.Uuid(), nullable=False),
    sa.Column('distributor_position_id', sa.Uuid(), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('amount_net', sa.Numeric(precision=18, scale=2), nullable=False),
    sa.Column('vat_rate_id', sa.Uuid(), nullable=False),
    sa.Column('currency_code', sa.String(length=3), nullable=False),
    sa.Column('status', sa.String(length=32), server_default=sa.text("'DRAFT'"), nullable=False),
    sa.Column('note', sa.String(length=1000), nullable=True),
    sa.ForeignKeyConstraint(['article_id'], ['expense_articles.id'], ),
    sa.ForeignKeyConstraint(['currency_code'], ['currencies.code'], ),
    sa.ForeignKeyConstraint(['distributor_position_id'], ['positions.id'], ),
    sa.ForeignKeyConstraint(['executor_position_id'], ['positions.id'], ),
    sa.ForeignKeyConstraint(['registrar_position_id'], ['positions.id'], ),
    sa.ForeignKeyConstraint(['request_id'], ['payment_requests.id'], ),
    sa.ForeignKeyConstraint(['vat_rate_id'], ['vat_rates.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('request_events',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('request_id', sa.Uuid(), nullable=False),
    sa.Column('event_type', sa.String(length=64), nullable=False),
    sa.Column('actor_user_id', sa.Uuid(), nullable=False),
    sa.Column('payload', sa.String(length=4000), nullable=False),
    sa.Column('snapshot_hash', sa.String(length=128), nullable=True),
    sa.ForeignKeyConstraint(['actor_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['request_id'], ['payment_requests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('request_files',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('request_id', sa.Uuid(), nullable=False),
    sa.Column('file_name', sa.String(length=255), nullable=False),
    sa.Column('mime_type', sa.String(length=128), nullable=False),
    sa.Column('storage_path', sa.String(length=1000), nullable=False),
    sa.Column('doc_type', sa.String(length=64), nullable=False),
    sa.Column('uploaded_by', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['request_id'], ['payment_requests.id'], ),
    sa.ForeignKeyConstraint(['uploaded_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('responsibilities',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('article_id', sa.Uuid(), nullable=False),
    sa.Column('role_id', sa.Uuid(), nullable=False),
    sa.Column('position_id', sa.Uuid(), nullable=False),
    sa.Column('is_primary', sa.Boolean(), nullable=False),
    sa.Column('valid_from', sa.Date(), nullable=False),
    sa.Column('valid_to', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['article_id'], ['expense_articles.id'], ),
    sa.ForeignKeyConstraint(['position_id'], ['positions.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_positions',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('position_id', sa.Uuid(), nullable=False),
    sa.Column('valid_from', sa.Date(), nullable=False),
    sa.Column('valid_to', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['position_id'], ['positions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('line_contracts',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('line_id', sa.Uuid(), nullable=False),
    sa.Column('contract_number', sa.String(length=128), nullable=False),
    sa.Column('amount_net', sa.Numeric(precision=18, scale=2), nullable=False),
    sa.Column('currency_code', sa.String(length=3), nullable=False),
    sa.Column('contract_date', sa.Date(), nullable=False),
    sa.Column('note', sa.String(length=1000), nullable=True),
    sa.ForeignKeyConstraint(['currency_code'], ['currencies.code'], ),
    sa.ForeignKeyConstraint(['line_id'], ['payment_request_lines.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('line_required_docs',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('line_id', sa.Uuid(), nullable=False),
    sa.Column('doc_type', sa.String(length=64), nullable=False),
    sa.Column('is_provided', sa.Boolean(), nullable=False),
    sa.Column('file_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['file_id'], ['request_files.id'], ),
    sa.ForeignKeyConstraint(['line_id'], ['payment_request_lines.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
# ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('line_required_docs')
    op.drop_table('line_contracts')
    op.drop_table('user_positions')
    op.drop_table('responsibilities')
    op.drop_table('request_files')
    op.drop_table('request_events')
    op.drop_table('payment_request_lines')
    op.drop_table('delegations')
    op.drop_table('user_roles')
    op.drop_table('positions')
    op.drop_table('payment_requests')
    op.drop_table('article_required_docs')
    op.drop_table('vat_rates')
    op.drop_table('users')
    op.drop_table('roles')
    op.drop_table('expense_articles')
    op.drop_table('departments')
    op.drop_table('currencies')
    op.drop_table('counterparties')
    # ### end Alembic commands ###
